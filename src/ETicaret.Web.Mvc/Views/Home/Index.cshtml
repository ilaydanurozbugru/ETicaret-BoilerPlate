@model ETicaret.Dashboards.Dto.DashboardsDto

<!-- Featured Start -->
<div class="container-fluid pt-5">
    <div class="row px-xl-5 pb-3">
        <div class="col-lg-3 col-md-6 col-sm-12 pb-1">
            <div class="d-flex align-items-center border mb-4" style="padding: 30px;">
                <h1 class="fa fa-check text-primary m-0 mr-3"></h1>
                <h5 class="font-weight-semi-bold m-0">Onaylı Ürünler</h5>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 col-sm-12 pb-1">
            <div class="d-flex align-items-center border mb-4" style="padding: 30px;">
                <h1 class="fa fa-shipping-fast text-primary m-0 mr-2"></h1>
                <h5 class="font-weight-semi-bold m-0">Hızlı Kargo</h5>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 col-sm-12 pb-1">
            <div class="d-flex align-items-center border mb-4" style="padding: 30px;">
                <h1 class="fas fa-exchange-alt text-primary m-0 mr-3"></h1>
                <h5 class="font-weight-semi-bold m-0">14 Gün İçinde İade</h5>
            </div>
        </div>
        <div class="col-lg-3 col-md-6 col-sm-12 pb-1">
            <div class="d-flex align-items-center border mb-4" style="padding: 30px;">
                <h1 class="fa fa-phone-volume text-primary m-0 mr-3"></h1>
                <h5 class="font-weight-semi-bold m-0">7/24 Destek</h5>
            </div>
        </div>
    </div>
</div>
<!-- Featured End -->
<!-- Products Start -->
@if (Model.ProductList != null && Model.ProductList.Items.Any())
{
    <div class="container-fluid pt-5">
        <div class="text-center mb-4">
            <h2 class="section-title px-5"><span class="px-2">Trend Ürünler</span></h2>
        </div>
        <div class="row px-xl-5 pb-3">
            @foreach (var item in Model.ProductList.Items)
            {
                <div class="col-lg-3 col-md-6 col-sm-12 pb-1">
                    <div class="card product-item border-0 mb-4">
                        <div class="card-header product-img position-relative overflow-hidden bg-transparent border p-0">
                            <img class="img-fluid w-100" src="/File/GetImageById?id=@item.ImageId" alt="@item.ProductName">
                        </div>
                        <div class="card-body border-left border-right text-center p-0 pt-4 pb-3">
                            <h6 class="text-truncate mb-3">@item.ProductName</h6>
                            <div class="d-flex justify-content-center">
                                <h6>@item.Price.ToString("c")</h6>
                            </div>
                        </div>
                        <div class="card-footer d-flex justify-content-between bg-light border">
                            <a href="/Home/Detail/@item.Id" class="btn btn-sm text-dark p-0">
                                <i class="fas fa-eye text-primary mr-1"></i> Detay
                            </a>
                            <a href="javascript:void(0);" class="btn btn-sm text-dark p-0 add-to-cart"
                               data-id="@item.Id"
                               data-name="@item.ProductName"
                               data-price="@item.Price"
                               data-image="/File/GetImageById?id=@item.ImageId">
                                <i class="fas fa-shopping-cart text-primary mr-1"></i> Sepete Ekle
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}
else
{
    <p>Şu anda ürün bulunmamaktadır.</p>
}
<!-- Products End -->
<!-- Sepete Ürün Ekleme İşlemi -->
<script>
    document.querySelectorAll('.add-to-cart').forEach(button => {
        button.addEventListener('click', function () {
            const productId = this.getAttribute('data-id');
            const productName = this.getAttribute('data-name');
            const productPrice = parseFloat(this.getAttribute('data-price'));
            const productImage = this.getAttribute('data-image');

            let cart = JSON.parse(localStorage.getItem('cart')) || [];

            let product = cart.find(item => item.id === productId);
            if (product) {
                product.quantity++;
            } else {
                cart.push({
                    id: productId,
                    name: productName,
                    price: productPrice,
                    image: productImage,
                    quantity: 1
                });
            }

            localStorage.setItem('cart', JSON.stringify(cart));
            updateCartTotal();
            toastr.success('Ürün sepete eklendi!');
        });
    });

    function updateCartTotal() {
        let cart = JSON.parse(localStorage.getItem('cart')) || [];
        let totalAmount = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
        document.getElementById('cart-total').textContent = totalAmount.toFixed(2) + " TL";
    }

    document.addEventListener('DOMContentLoaded', updateCartTotal);
</script>
